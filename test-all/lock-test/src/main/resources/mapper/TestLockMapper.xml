<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.muggle.locktest.TestLockMapper">
  <resultMap id="BaseResultMap" type="com.muggle.locktest.TestLock">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="test1" jdbcType="VARCHAR" property="test1" />
    <result column="test2" jdbcType="VARCHAR" property="test2" />
    <result column="test3" jdbcType="VARCHAR" property="test3" />
  </resultMap>
  <sql id="Base_Column_List">
    id, test1, test2, test3
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from test_lock
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from test_lock
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.muggle.locktest.TestLock">
    insert into test_lock (id, test1, test2, 
      test3)
    values (#{id,jdbcType=BIGINT}, #{test1,jdbcType=VARCHAR}, #{test2,jdbcType=VARCHAR}, 
      #{test3,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.muggle.locktest.TestLock">
    insert into test_lock
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="test1 != null">
        test1,
      </if>
      <if test="test2 != null">
        test2,
      </if>
      <if test="test3 != null">
        test3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="test1 != null">
        #{test1,jdbcType=VARCHAR},
      </if>
      <if test="test2 != null">
        #{test2,jdbcType=VARCHAR},
      </if>
      <if test="test3 != null">
        #{test3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.muggle.locktest.TestLock">
    update test_lock
    <set>
      <if test="test1 != null">
        test1 = #{test1,jdbcType=VARCHAR},
      </if>
      <if test="test2 != null">
        test2 = #{test2,jdbcType=VARCHAR},
      </if>
      <if test="test3 != null">
        test3 = #{test3,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.muggle.locktest.TestLock">
    update test_lock
    set test1 = #{test1,jdbcType=VARCHAR},
      test2 = #{test2,jdbcType=VARCHAR},
      test3 = #{test3,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="test1"  parameterType="java.lang.Long" resultMap="BaseResultMap">
   SELECT *

FROM `test_lock` WHERE id=(SELECT max(id) FROM test_lock )
    for update ;
  </select>


  <select id="test2">
     begin
  </select>

  <select id="test3">
    commit
  </select>
  <select id="test4" resultType="com.muggle.locktest.TestLock">
    ${test}
  </select>
</mapper>